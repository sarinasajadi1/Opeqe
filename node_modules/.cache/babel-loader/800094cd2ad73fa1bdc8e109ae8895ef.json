{"ast":null,"code":"import axios from'axios';import*as actionTypes from'./actionTypes';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token,userId){return{type:actionTypes.AUTH_SUCCESS,idToken:token,userId:userId};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem('token');localStorage.removeItem('expirationDate');localStorage.removeItem('userId');return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var auth=function auth(email,password,isSignup){return function(dispatch){dispatch(authStart());var authData={email:email,password:password,returnSecureToken:true};var url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBlSRZmhaaXkpSQeiVUiz2kyiFuvXIgku8';if(!isSignup){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBlSRZmhaaXkpSQeiVUiz2kyiFuvXIgku8';}axios.post(url,authData).then(function(response){var expirationDate=new Date(new Date().getTime()+response.data.expiresIn*1000);localStorage.setItem('token',response.data.idToken);localStorage.setItem('expirationDate',expirationDate);localStorage.setItem('userId',response.data.localId);dispatch(authSuccess(response.data.idToken,response.data.localId));dispatch(checkAuthTimeout(response.data.expiresIn));}).catch(function(err){console.log(err.response);dispatch(authFail(err.response.data.error));});};};export var setAuthRedirectPath=function setAuthRedirectPath(path){return{type:actionTypes.SET_AUTH_REDIRECT_PATH,path:path};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(!token){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logout());}else{var userId=localStorage.getItem('userId');dispatch(authSuccess(token,userId));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","console","log","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC3B,MAAO,CACHC,IAAI,CAAEF,WAAW,CAACG,UADf,CAAP,CAGH,CAJM,CAMP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1C,MAAO,CACHJ,IAAI,CAAEF,WAAW,CAACO,YADf,CAEHC,OAAO,CAAEH,KAFN,CAGHC,MAAM,CAAEA,MAHL,CAAP,CAKH,CANM,CAQP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHR,IAAI,CAAEF,WAAW,CAACW,SADf,CAEHD,KAAK,CAAEA,KAFJ,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxBC,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACAD,YAAY,CAACC,UAAb,CAAwB,gBAAxB,EACAD,YAAY,CAACC,UAAb,CAAwB,QAAxB,EACA,MAAO,CACHZ,IAAI,CAAEF,WAAW,CAACe,WADf,CAAP,CAGH,CAPM,CASP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,cAAD,CAAoB,CAChD,MAAO,UAAAC,QAAQ,CAAI,CACfC,UAAU,CAAC,UAAM,CACbD,QAAQ,CAACN,MAAM,EAAP,CAAR,CACH,CAFS,CAEPK,cAAc,CAAG,IAFV,CAAV,CAGH,CAJD,CAKH,CANM,CAQP,MAAO,IAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,CAA+B,CAC/C,MAAO,UAAAL,QAAQ,CAAI,CACfA,QAAQ,CAACjB,SAAS,EAAV,CAAR,CACA,GAAMuB,CAAAA,QAAQ,CAAG,CACbH,KAAK,CAAEA,KADM,CAEbC,QAAQ,CAAEA,QAFG,CAGbG,iBAAiB,CAAE,IAHN,CAAjB,CAKA,GAAIC,CAAAA,GAAG,CAAG,uGAAV,CACA,GAAI,CAACH,QAAL,CAAe,CACXG,GAAG,CAAG,mHAAN,CACH,CACD3B,KAAK,CAAC4B,IAAN,CAAWD,GAAX,CAAgBF,QAAhB,EACKI,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,IAAJ,CAAS,GAAIA,CAAAA,IAAJ,GAAWC,OAAX,GAAuBH,QAAQ,CAACI,IAAT,CAAcC,SAAd,CAA0B,IAA1D,CAAvB,CACArB,YAAY,CAACsB,OAAb,CAAqB,OAArB,CAA8BN,QAAQ,CAACI,IAAT,CAAczB,OAA5C,EACAK,YAAY,CAACsB,OAAb,CAAqB,gBAArB,CAAuCL,cAAvC,EACAjB,YAAY,CAACsB,OAAb,CAAqB,QAArB,CAA+BN,QAAQ,CAACI,IAAT,CAAcG,OAA7C,EACAlB,QAAQ,CAACd,WAAW,CAACyB,QAAQ,CAACI,IAAT,CAAczB,OAAf,CAAwBqB,QAAQ,CAACI,IAAT,CAAcG,OAAtC,CAAZ,CAAR,CACAlB,QAAQ,CAACF,gBAAgB,CAACa,QAAQ,CAACI,IAAT,CAAcC,SAAf,CAAjB,CAAR,CACH,CARL,EASKG,KATL,CASW,SAAAC,GAAG,CAAI,CACVC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACT,QAAhB,EACAX,QAAQ,CAACT,QAAQ,CAAC6B,GAAG,CAACT,QAAJ,CAAaI,IAAb,CAAkBvB,KAAnB,CAAT,CAAR,CACH,CAZL,EAaH,CAxBD,CAyBH,CA1BM,CA4BP,MAAO,IAAM+B,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAU,CACzC,MAAO,CACHxC,IAAI,CAAEF,WAAW,CAAC2C,sBADf,CAEHD,IAAI,CAAEA,IAFH,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,MAAO,UAAA1B,QAAQ,CAAI,CACf,GAAMb,CAAAA,KAAK,CAAGQ,YAAY,CAACgC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAI,CAACxC,KAAL,CAAY,CACRa,QAAQ,CAACN,MAAM,EAAP,CAAR,CACH,CAFD,IAEO,CACH,GAAMkB,CAAAA,cAAc,CAAG,GAAIC,CAAAA,IAAJ,CAASlB,YAAY,CAACgC,OAAb,CAAqB,gBAArB,CAAT,CAAvB,CACA,GAAIf,cAAc,EAAI,GAAIC,CAAAA,IAAJ,EAAtB,CAAkC,CAC9Bb,QAAQ,CAACN,MAAM,EAAP,CAAR,CACH,CAFD,IAEO,CACH,GAAMN,CAAAA,MAAM,CAAGO,YAAY,CAACgC,OAAb,CAAqB,QAArB,CAAf,CACA3B,QAAQ,CAACd,WAAW,CAACC,KAAD,CAAQC,MAAR,CAAZ,CAAR,CACAY,QAAQ,CAACF,gBAAgB,CAAC,CAACc,cAAc,CAACE,OAAf,GAA2B,GAAID,CAAAA,IAAJ,GAAWC,OAAX,EAA5B,EAAoD,IAArD,CAAjB,CAAR,CACH,CACJ,CACJ,CAdD,CAeH,CAhBM","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBlSRZmhaaXkpSQeiVUiz2kyiFuvXIgku8';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBlSRZmhaaXkpSQeiVUiz2kyiFuvXIgku8';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}
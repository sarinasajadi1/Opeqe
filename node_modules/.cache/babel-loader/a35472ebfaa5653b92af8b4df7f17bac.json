{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.7,\n  bacon: 1.5,\n  cheese: 1,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 6,\n      purchasabl: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const oldPrice = this.state.totalPrice;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const updatedPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      ;\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const oldPrice = this.state.totalPrice;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const updatedPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredints[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      addIngredients: this.addIngredientHandler,\n      removeIngredients: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.updatePurchaseState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasabl","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","oldPrice","priceAddition","updatedPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","sum","Object","keys","map","igKey","ingredints","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Aux from '../../hoc/Aux'\r\n\r\nimport Burger from '../../components/Burger/Burger'\r\n\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.7,\r\n    bacon: 1.5,\r\n    cheese: 1,\r\n    meat: 2\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 6,\r\n        purchasabl: false\r\n\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey =>{\r\n            return ingredints[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0)\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const oldPrice = this.state.totalPrice;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const updatedPrice = oldPrice + priceAddition\r\n        this.setState({ingredients: updatedIngredients, totalPrice: updatedPrice})\r\n        this.updatePurchaseState(updatedIngredients);\r\n        \r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        };\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const oldPrice = this.state.totalPrice;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const updatedPrice = oldPrice - priceDeduction\r\n        this.setState({ingredients: updatedIngredients, totalPrice: updatedPrice})\r\n        this.updatePurchaseState(updatedIngredients);\r\n        \r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return(\r\n            <Aux>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls addIngredients={this.addIngredientHandler}\r\n                               removeIngredients={this.removeIngredientHandler}\r\n                               disabled={disabledInfo}\r\n                               price={this.state.totalPrice}\r\n                               purchasable={this.updatePurchaseState}/>\r\n            </Aux>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import axios from'../../axios-orders';export var purchaseBurgerSuccess=function purchaseBurgerSuccess(id,orderData){return{type:actionTypes.PURCHASE_BURGER_SUCCESS,orderId:id,orderData:orderData};};export var purchaseBurgerFail=function purchaseBurgerFail(error){return{type:actionTypes.PURCHASE_BURGER_FAIL,error:error};};export var purchaseBurgerStart=function purchaseBurgerStart(){return{type:actionTypes.PURCHASE_BURGER_START};};export var purchaseBurger=function purchaseBurger(orderData,token){return function(dispatch){dispatch(purchaseBurgerStart());axios.post('/orders.json?auth='+token,orderData).then(function(response){dispatch(purchaseBurgerSuccess(response.data.name,orderData));}).catch(function(error){dispatch(purchaseBurgerFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());var queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';axios.get('/orders.json'+queryParams).then(function(res){var fetchedOrders=[];for(var key in res.data){fetchedOrders.push(_objectSpread({},res.data[key],{id:key}));}dispatch(fetchOrdersSuccess(fetchedOrders));}).catch(function(err){dispatch(fetchOrdersFail(err));});};};","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}
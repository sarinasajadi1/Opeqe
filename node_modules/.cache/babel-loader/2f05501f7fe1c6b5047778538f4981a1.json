{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import Button from'../../../components/UI/Button/Button';import Spinner from'../../../components/UI/Spinner/Spinner';import classes from'./ContactData.module.css';import axios from'../../../axios-orders';import Input from'../../../components/UI/Input/Input';import withErrorHandler from'../../../hoc/withErrorHandler/withErrorHandler';import*as actions from'../../../store/actions/index';import{updateObject,checkValidity}from'../../../shared/utility';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);function ContactData(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your Name'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'Street'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'ZIP Code'},value:'',validation:{required:true,//                     minLength: 5,\n//                     maxLength: 5,\nisNumeric:true},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'Country'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your E-Mail'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},deliveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',displayValue:'Fastest'},{value:'cheapest',displayValue:'Cheapest'}]},value:'fastest',validation:{},valid:true}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ings,price:_this.props.price,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.orderForm[inputIdentifier].validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var form=React.createElement(\"form\",{onSubmit:this.orderHandler},\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \",formElementsArray.map(function(formElement){return React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}});}),\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \",React.createElement(Button,{btnType:\"Success\",disabled:!this.state.formIsValid},\"ORDER\"),\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \");if(this.props.loading){form=React.createElement(Spinner,null);}return React.createElement(\"div\",{className:classes.ContactData},\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \",React.createElement(\"h4\",null,\"Enter your Contact Data\"),\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \",form,\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \");}}]);return ContactData;}(Component);var mapStateToProps=function mapStateToProps(state){return{ings:state.burgerBuilder.ingredients,price:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(actions.purchaseBurger(orderData,token));}};};export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","connect","Button","Spinner","classes","axios","Input","withErrorHandler","actions","updateObject","checkValidity","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","setState","formElementsArray","key","push","id","config","form","map","formElement","loading","mapStateToProps","burgerBuilder","totalPrice","auth","mapDispatchToProps","dispatch","purchaseBurger"],"mappings":"otBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sCAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wCAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oCAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gDAA7B,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,8BAAzB,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,yBAA5C,C,GAEMC,CAAAA,W,mZACFC,K,CAAQ,CACJC,SAAS,CAAE,CACPC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,aAAa,CAAE,CACXC,IAAI,CAAE,MADK,CAEXC,WAAW,CAAE,WAFF,CAFb,CAMFC,KAAK,CAAE,EANL,CAOFC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAPV,CAUFC,KAAK,CAAE,KAVL,CAWFC,OAAO,CAAE,KAXP,CADC,CAcPC,MAAM,CAAE,CACJT,WAAW,CAAE,OADT,CAEJC,aAAa,CAAE,CACXC,IAAI,CAAE,MADK,CAEXC,WAAW,CAAE,QAFF,CAFX,CAMJC,KAAK,CAAE,EANH,CAOJC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAPR,CAUJC,KAAK,CAAE,KAVH,CAWJC,OAAO,CAAE,KAXL,CAdD,CA2BPE,OAAO,CAAE,CACLV,WAAW,CAAE,OADR,CAELC,aAAa,CAAE,CACXC,IAAI,CAAE,MADK,CAEXC,WAAW,CAAE,UAFF,CAFV,CAMLC,KAAK,CAAE,EANF,CAOLC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAE5B;AACA;AACoBK,SAAS,CAAE,IAJH,CAPP,CAaLJ,KAAK,CAAE,KAbF,CAcLC,OAAO,CAAE,KAdJ,CA3BF,CA2CPI,OAAO,CAAE,CACLZ,WAAW,CAAE,OADR,CAELC,aAAa,CAAE,CACXC,IAAI,CAAE,MADK,CAEXC,WAAW,CAAE,SAFF,CAFV,CAMLC,KAAK,CAAE,EANF,CAOLC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAPP,CAULC,KAAK,CAAE,KAVF,CAWLC,OAAO,CAAE,KAXJ,CA3CF,CAwDPK,KAAK,CAAE,CACHb,WAAW,CAAE,OADV,CAEHC,aAAa,CAAE,CACXC,IAAI,CAAE,OADK,CAEXC,WAAW,CAAE,aAFF,CAFZ,CAMHC,KAAK,CAAE,EANJ,CAOHC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAERQ,OAAO,CAAE,IAFD,CAPT,CAWHP,KAAK,CAAE,KAXJ,CAYHC,OAAO,CAAE,KAZN,CAxDA,CAsEPO,cAAc,CAAE,CACZf,WAAW,CAAE,QADD,CAEZC,aAAa,CAAE,CACXe,OAAO,CAAE,CACL,CAACZ,KAAK,CAAE,SAAR,CAAmBa,YAAY,CAAE,SAAjC,CADK,CAEL,CAACb,KAAK,CAAE,UAAR,CAAoBa,YAAY,CAAE,UAAlC,CAFK,CADE,CAFH,CAQZb,KAAK,CAAE,SARK,CASZC,UAAU,CAAE,EATA,CAUZE,KAAK,CAAE,IAVK,CAtET,CADP,CAoFJW,WAAW,CAAE,KApFT,C,OAuFRC,Y,CAAe,SAAEC,KAAF,CAAa,CACxBA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,IAAK,GAAIC,CAAAA,qBAAT,GAAkC,OAAK1B,KAAL,CAAWC,SAA7C,CAAwD,CACpDwB,QAAQ,CAACC,qBAAD,CAAR,CAAkC,MAAK1B,KAAL,CAAWC,SAAX,CAAqByB,qBAArB,EAA4CnB,KAA9E,CACH,CACD,GAAMoB,CAAAA,KAAK,CAAG,CACVC,WAAW,CAAE,MAAKC,KAAL,CAAWC,IADd,CAEVC,KAAK,CAAE,MAAKF,KAAL,CAAWE,KAFR,CAGVC,SAAS,CAAEP,QAHD,CAIVQ,MAAM,CAAE,MAAKJ,KAAL,CAAWI,MAJT,CAAd,CAOA,MAAKJ,KAAL,CAAWK,aAAX,CAAyBP,KAAzB,CAAgC,MAAKE,KAAL,CAAWM,KAA3C,EAEH,C,OAEDC,mB,CAAsB,SAACb,KAAD,CAAQc,eAAR,CAA4B,CAE9C,GAAMC,CAAAA,kBAAkB,CAAGzC,YAAY,CAAC,MAAKG,KAAL,CAAWC,SAAX,CAAqBoC,eAArB,CAAD,CAAwC,CAC3E9B,KAAK,CAAEgB,KAAK,CAACgB,MAAN,CAAahC,KADuD,CAE3EG,KAAK,CAAEZ,aAAa,CAACyB,KAAK,CAACgB,MAAN,CAAahC,KAAd,CAAqB,MAAKP,KAAL,CAAWC,SAAX,CAAqBoC,eAArB,EAAsC7B,UAA3D,CAFuD,CAG3EG,OAAO,CAAE,IAHkE,CAAxC,CAAvC,CAKA,GAAM6B,CAAAA,gBAAgB,CAAG3C,YAAY,CAAC,MAAKG,KAAL,CAAWC,SAAZ,oBAChCoC,eADgC,CACdC,kBADc,EAArC,CAIA,GAAIjB,CAAAA,WAAW,CAAG,IAAlB,CACA,IAAK,GAAIgB,CAAAA,gBAAT,GAA4BG,CAAAA,gBAA5B,CAA8C,CAC1CnB,WAAW,CAAGmB,gBAAgB,CAACH,gBAAD,CAAhB,CAAkC3B,KAAlC,EAA2CW,WAAzD,CACH,CACD,MAAKoB,QAAL,CAAc,CAACxC,SAAS,CAAEuC,gBAAZ,CAA8BnB,WAAW,CAAEA,WAA3C,CAAd,EACH,C,8EAES,iBACN,GAAMqB,CAAAA,iBAAiB,CAAG,EAA1B,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgB,MAAK3C,KAAL,CAAWC,SAA3B,CAAsC,CAClCyC,iBAAiB,CAACE,IAAlB,CAAuB,CACnBC,EAAE,CAAEF,GADe,CAEnBG,MAAM,CAAE,KAAK9C,KAAL,CAAWC,SAAX,CAAqB0C,GAArB,CAFW,CAAvB,EAIH,CACD,GAAII,CAAAA,IAAI,CACJ,4BAAM,QAAQ,CAAE,KAAKzB,YAArB,6CACKoB,iBAAiB,CAACM,GAAlB,CAAsB,SAAAC,WAAW,QAC9B,qBAAC,KAAD,EACI,GAAG,CAAEA,WAAW,CAACJ,EADrB,CAEI,WAAW,CAAEI,WAAW,CAACH,MAAZ,CAAmB3C,WAFpC,CAGI,aAAa,CAAE8C,WAAW,CAACH,MAAZ,CAAmB1C,aAHtC,CAII,KAAK,CAAE6C,WAAW,CAACH,MAAZ,CAAmBvC,KAJ9B,CAKI,OAAO,CAAE,CAAC0C,WAAW,CAACH,MAAZ,CAAmBpC,KALjC,CAMI,cAAc,CAAEuC,WAAW,CAACH,MAAZ,CAAmBtC,UANvC,CAOI,OAAO,CAAEyC,WAAW,CAACH,MAAZ,CAAmBnC,OAPhC,CAQI,OAAO,CAAE,iBAACY,KAAD,QAAW,CAAA,MAAI,CAACa,mBAAL,CAAyBb,KAAzB,CAAgC0B,WAAW,CAACJ,EAA5C,CAAX,EARb,EAD8B,EAAjC,CADL,4CAYI,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,QAAQ,CAAE,CAAC,KAAK7C,KAAL,CAAWqB,WAAhD,UAZJ,kCADJ,CAgBA,GAAK,KAAKQ,KAAL,CAAWqB,OAAhB,CAA0B,CACtBH,IAAI,CAAG,oBAAC,OAAD,MAAP,CACH,CACD,MACI,4BAAK,SAAS,CAAEvD,OAAO,CAACO,WAAxB,6CACI,wDADJ,4CAEKgD,IAFL,kCADJ,CAMH,C,yBA7JqB3D,S,EAgK1B,GAAM+D,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAnD,KAAK,CAAI,CAC7B,MAAO,CACH8B,IAAI,CAAE9B,KAAK,CAACoD,aAAN,CAAoBxB,WADvB,CAEHG,KAAK,CAAE/B,KAAK,CAACoD,aAAN,CAAoBC,UAFxB,CAGHH,OAAO,CAAElD,KAAK,CAAC2B,KAAN,CAAYuB,OAHlB,CAIHf,KAAK,CAAEnC,KAAK,CAACsD,IAAN,CAAWnB,KAJf,CAKHF,MAAM,CAAEjC,KAAK,CAACsD,IAAN,CAAWrB,MALhB,CAAP,CAOH,CARD,CAUA,GAAMsB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHtB,aAAa,CAAE,uBAACF,SAAD,CAAYG,KAAZ,QAAsBqB,CAAAA,QAAQ,CAAC5D,OAAO,CAAC6D,cAAR,CAAuBzB,SAAvB,CAAkCG,KAAlC,CAAD,CAA9B,EADZ,CAAP,CAGH,CAJD,CAMA,cAAe9C,CAAAA,OAAO,CAAC8D,eAAD,CAAkBI,kBAAlB,CAAP,CAA6C5D,gBAAgB,CAACI,WAAD,CAAcN,KAAd,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n//                     minLength: 5,\r\n//                     maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n  \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        \r\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n            touched: true\r\n        });\r\n        const updatedOrderForm = updateObject(this.state.orderForm, {\r\n            [inputIdentifier]: updatedFormElement\r\n        });\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));"]},"metadata":{},"sourceType":"module"}
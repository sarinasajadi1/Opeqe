{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export var updateObject=function updateObject(oldObject,updatedProperties){return _objectSpread({},oldObject,{},updatedProperties);};export var checkValidity=function checkValidity(value,rules){var isValid=true;if(!rules){return true;}if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;};","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/shared/utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"qHAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAAYC,iBAAZ,CAAkC,CACtD,wBACOD,SADP,IAEOC,iBAFP,EAIH,CALE,CAOH,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAEC,KAAF,CAASC,KAAT,CAAoB,CAC7C,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GAAK,CAACD,KAAN,CAAc,CACV,MAAO,KAAP,CACH,CAED,GAAKA,KAAK,CAACE,QAAX,CAAsB,CAClBD,OAAO,CAAGF,KAAK,CAACI,IAAN,KAAiB,EAAjB,EAAuBF,OAAjC,CACH,CAED,GAAKD,KAAK,CAACI,SAAX,CAAuB,CACnBH,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACI,SAAtB,EAAmCH,OAA7C,CACH,CAED,GAAKD,KAAK,CAACM,SAAX,CAAuB,CACnBL,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACM,SAAtB,EAAmCL,OAA7C,CACH,CAED,GAAKD,KAAK,CAACO,OAAX,CAAqB,CACjB,GAAMC,CAAAA,OAAO,CAAG,uIAAhB,CACAP,OAAO,CAAGO,OAAO,CAACC,IAAR,CAAcV,KAAd,GAAyBE,OAAnC,CACH,CAED,GAAKD,KAAK,CAACU,SAAX,CAAuB,CACnB,GAAMF,CAAAA,QAAO,CAAG,OAAhB,CACAP,OAAO,CAAGO,QAAO,CAACC,IAAR,CAAcV,KAAd,GAAyBE,OAAnC,CACH,CAED,MAAOA,CAAAA,OAAP,CACH,CA7BM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\r\n        return {\r\n            ...oldObject,\r\n            ...updatedProperties\r\n        };\r\n    };\r\n    \r\n    export const checkValidity = ( value, rules ) => {\r\n        let isValid = true;\r\n        if ( !rules ) {\r\n            return true;\r\n        }\r\n    \r\n        if ( rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n    \r\n        if ( rules.minLength ) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n    \r\n        if ( rules.maxLength ) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n    \r\n        if ( rules.isEmail ) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n    \r\n        if ( rules.isNumeric ) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n    \r\n        return isValid;\r\n    }"]},"metadata":{},"sourceType":"module"}
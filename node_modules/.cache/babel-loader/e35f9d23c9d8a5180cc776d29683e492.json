{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Auxilary/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index'; // const INGREDIENT_PRICES = {\n//     salad: 0.7,\n//     bacon: 1.5,\n//     cheese: 1,\n//     meat: 2\n// }\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath('/checkout');\n        this.props.history.push('/auth');\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Ingredients can't be loaded! Please make sure you are connected to\", React.createElement(\"strong\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"VPN\")) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        isAuth: this.props.isAuthenticated,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \");\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", orderSummary, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", burger, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","actions","BurgerBuilder","state","purchasing","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","color","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxilary/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'\r\n\r\n// const INGREDIENT_PRICES = {\r\n//     salad: 0.7,\r\n//     bacon: 1.5,\r\n//     cheese: 1,\r\n//     meat: 2\r\n// }\r\n\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props) {\r\n            //     super(props);\r\n            //     this.state = {...}\r\n            // }\r\n            state = {\r\n                purchasing: false\r\n            }\r\n        \r\n            componentDidMount () {\r\n                this.props.onInitIngredients();\r\n            }\r\n        \r\n            updatePurchaseState ( ingredients ) {\r\n                const sum = Object.keys( ingredients )\r\n                    .map( igKey => {\r\n                        return ingredients[igKey];\r\n                    } )\r\n                    .reduce( ( sum, el ) => {\r\n                        return sum + el;\r\n                    }, 0 );\r\n                return sum > 0;\r\n            }\r\n        \r\n            purchaseHandler = () => {\r\n                if (this.props.isAuthenticated) {\r\n                    this.setState( { purchasing: true } );\r\n                } else {\r\n                    this.props.onSetAuthRedirectPath('/checkout');\r\n                    this.props.history.push('/auth');\r\n                }\r\n            }\r\n        \r\n            purchaseCancelHandler = () => {\r\n                this.setState( { purchasing: false } );\r\n            }\r\n        \r\n            purchaseContinueHandler = () => {\r\n                this.props.onInitPurchase();\r\n                this.props.history.push('/checkout');\r\n            }\r\n        \r\n            render () {\r\n                const disabledInfo = {\r\n                    ...this.props.ings\r\n                };\r\n                for ( let key in disabledInfo ) {\r\n                    disabledInfo[key] = disabledInfo[key] <= 0\r\n                }\r\n                let orderSummary = null;\r\n                let burger = this.props.error ? <p>Ingredients can't be loaded! Please make sure you are connected to \r\n            <strong style={{color: 'red'}}>VPN</strong></p> : <Spinner />;\r\n        \r\n                if ( this.props.ings ) {\r\n                    burger = (\r\n                        <Aux>\r\n                            <Burger ingredients={this.props.ings} />\r\n                            <BuildControls\r\n                                ingredientAdded={this.props.onIngredientAdded}\r\n                                ingredientRemoved={this.props.onIngredientRemoved}\r\n                                disabled={disabledInfo}\r\n                                purchasable={this.updatePurchaseState(this.props.ings)}\r\n                                ordered={this.purchaseHandler}\r\n                                isAuth={this.props.isAuthenticated}\r\n                                price={this.props.price} />\r\n                        </Aux>\r\n                    );\r\n                    orderSummary = <OrderSummary\r\n                        ingredients={this.props.ings}\r\n                        price={this.props.price}\r\n                        purchaseCancelled={this.purchaseCancelHandler}\r\n                        purchaseContinued={this.purchaseContinueHandler} />;\r\n                }\r\n                // {salad: true, meat: false, ...}\r\n                return (\r\n                    <Aux>\r\n                        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                            {orderSummary}\r\n                        </Modal>\r\n                        {burger}\r\n                    </Aux>\r\n                );\r\n            }\r\n        }\r\n        \r\n        const mapStateToProps = state => {\r\n            return {\r\n                ings: state.burgerBuilder.ingredients,\r\n                price: state.burgerBuilder.totalPrice,\r\n                error: state.burgerBuilder.error,\r\n                isAuthenticated: state.auth.token !== null\r\n            };\r\n        }\r\n        \r\n        const mapDispatchToProps = dispatch => {\r\n            return {\r\n                onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n                onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n                onInitIngredients: () => dispatch(actions.initIngredients()),\r\n                onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n                onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n            }\r\n        }\r\n        \r\n        export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarin\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxilary/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.7,\n  bacon: 1.5,\n  cheese: 1,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 6,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const oldPrice = this.state.totalPrice;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const updatedPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      ;\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const oldPrice = this.state.totalPrice;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const updatedPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancleHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert(\"Continue!\")\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Sarina Sajadi',\n          address: {\n            street: 'Test street',\n            zipCode: '12345',\n            country: 'Canada'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://react-my-burger-38bc2.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Ingrdints can not be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        addIngredients: this.addIngredientHandler,\n        removeIngredients: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        ordered: this.purchasingHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        cancelOrder: this.purchaseCancleHandler,\n        continueOrder: this.purchaseContinueHandler,\n        price: this.state.totalPrice.toFixed(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["C:/Users/sarin/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","oldPrice","priceAddition","updatedPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchasingHandler","purchaseCancleHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","componentDidMount","get","data","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,KAAK,EAAE,GAFe;AAGtBC,EAAAA,MAAM,EAAE,CAHc;AAItBC,EAAAA,IAAI,EAAE;AAJgB,CAA1B;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAKjCe,KALiC,GAKzB;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,WAAW,EAAE,KAHT;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,KAAK,EAAE;AANH,KALyB;;AAAA,SAgCjCC,oBAhCiC,GAgCTC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWC,WAAX,CAAuBO,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKX,KAAL,CAAWC,WADM,CAAxB;;AAGAU,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAME,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMW,aAAa,GAAGnB,iBAAiB,CAACc,IAAD,CAAvC;AACA,YAAMM,YAAY,GAAGF,QAAQ,GAAGC,aAAhC;AACA,WAAKE,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEU,kBAAd;AAAkCT,QAAAA,UAAU,EAAEY;AAA9C,OAAd;AACA,WAAKE,mBAAL,CAAyBL,kBAAzB;AAEH,KA7CgC;;AAAA,SA+CjCM,uBA/CiC,GA+CNT,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWC,WAAX,CAAuBO,IAAvB,CAAjB;;AACA,UAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACf;AACH;;AAAA;AACD,YAAMC,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKX,KAAL,CAAWC,WADM,CAAxB;;AAGAU,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAME,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMgB,cAAc,GAAGxB,iBAAiB,CAACc,IAAD,CAAxC;AACA,YAAMM,YAAY,GAAGF,QAAQ,GAAGM,cAAhC;AACA,WAAKH,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEU,kBAAd;AAAkCT,QAAAA,UAAU,EAAEY;AAA9C,OAAd;AACA,WAAKE,mBAAL,CAAyBL,kBAAzB;AAEH,KA/DgC;;AAAA,SAiEjCQ,iBAjEiC,GAiEb,MAAM;AACtB,WAAKJ,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAnEgC;;AAAA,SAqEjCgB,qBArEiC,GAqET,MAAM;AAC1B,WAAKL,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAvEgC;;AAAA,SAyEjCiB,uBAzEiC,GAyEP,MAAM;AAC5B;AACA,WAAKN,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,YAAMiB,KAAK,GAAG;AACVrB,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADd;AAEVsB,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,UAFR;AAGVsB,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,eADA;AAENC,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAG,aADJ;AAELC,YAAAA,OAAO,EAAE,OAFJ;AAGLC,YAAAA,OAAO,EAAE;AAHJ,WAFH;AAONC,UAAAA,KAAK,EAAE;AAPD,SAHA;AAYdC,QAAAA,cAAc,EAAE;AAZF,OAAd;AAcJxC,MAAAA,KAAK,CAACyC,IAAN,CAAW,SAAX,EAAsBV,KAAtB,EAA6BW,IAA7B,CAAkCC,QAAQ,IAAI;AAAC,aAAKnB,QAAL,CAAc;AAACV,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AAAmD,OAAlG,EAAoG+B,KAApG,CAA0G7B,KAAK,IAAI;AAAC,aAAKS,QAAL,CAAc;AAACV,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AAAmD,OAAvK;AACH,KA3FoC;AAAA;;AAejCgC,EAAAA,iBAAiB,GAAE;AACf7C,IAAAA,KAAK,CAAC8C,GAAN,CAAU,+DAAV,EAA2EJ,IAA3E,CAAgFC,QAAQ,IAAI;AACxF,WAAKnB,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEiC,QAAQ,CAACI;AAAvB,OAAd;AACC,KAFL,EAEOH,KAFP,CAEa7B,KAAK,IAAI;AACd,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAE;AAAR,OAAd;AACP,KAJD;AAKH;;AAEDU,EAAAA,mBAAmB,CAAEf,WAAF,EAAe;AAC9B,UAAMsC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYxC,WAAZ,EAAyByC,GAAzB,CAA6BC,KAAK,IAAG;AAC7C,aAAO1C,WAAW,CAAC0C,KAAD,CAAlB;AACH,KAFW,EAETC,MAFS,CAEF,CAACL,GAAD,EAAMM,EAAN,KAAa;AACnB,aAAON,GAAG,GAAGM,EAAb;AACH,KAJW,EAIT,CAJS,CAAZ;AAKA,SAAK9B,QAAL,CAAc;AAACZ,MAAAA,WAAW,EAAEoC,GAAG,GAAG;AAApB,KAAd;AACH;;AA+DDO,EAAAA,MAAM,GAAE;AAEJ,UAAMC,YAAY,qBACX,KAAK/C,KAAL,CAAWC,WADA,CAAlB;;AAIA,SAAK,IAAI+C,GAAT,IAAgBD,YAAhB,EAA6B;AACzBA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACH;;AAED,QAAIC,YAAY,GAAG,IAAnB;AAEA,QAAIC,MAAM,GAAG,KAAKlD,KAAL,CAAWM,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAnB,GAAyD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtE;;AAEA,QAAG,KAAKN,KAAL,CAAWC,WAAd,EAA0B;AACtBiD,MAAAA,MAAM,GACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AAAe,QAAA,cAAc,EAAE,KAAKM,oBAApC;AACW,QAAA,iBAAiB,EAAE,KAAKU,uBADnC;AAEW,QAAA,QAAQ,EAAE8B,YAFrB;AAGW,QAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWE,UAH7B;AAIW,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAJnC;AAKW,QAAA,OAAO,EAAE,KAAKgB,iBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAWA8B,MAAAA,YAAY,GAAG,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWC,WAAtC;AACX,QAAA,WAAW,EAAE,KAAKmB,qBADP;AAEX,QAAA,aAAa,EAAE,KAAKC,uBAFT;AAGX,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWE,UAAX,CAAsBiD,OAAtB,CAA8B,CAA9B,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAIH;;AACD,QAAG,KAAKnD,KAAL,CAAWK,OAAd,EAAsB;AAClB4C,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AAED,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWI,UAAxB;AAAoC,MAAA,WAAW,EAAE,KAAKgB,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK6B,YADL,CADJ,EAIKC,MAJL,CADJ;AASH;;AAzIgC;;AA4IrC,eAAezD,gBAAgB,CAACM,aAAD,EAAgBR,KAAhB,CAA/B","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Aux from '../../hoc/Auxilary/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.7,\r\n    bacon: 1.5,\r\n    cheese: 1,\r\n    meat: 2\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 6,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://react-my-burger-38bc2.firebaseio.com/ingredients.json').then(response => {\r\n            this.setState({ingredients: response.data})\r\n            }).catch(error => {\r\n                this.setState({error: true})\r\n        })\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        this.setState({purchasable: sum > 0})\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const oldPrice = this.state.totalPrice;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const updatedPrice = oldPrice + priceAddition\r\n        this.setState({ingredients: updatedIngredients, totalPrice: updatedPrice})\r\n        this.updatePurchaseState(updatedIngredients);\r\n        \r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        };\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const oldPrice = this.state.totalPrice;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const updatedPrice = oldPrice - priceDeduction\r\n        this.setState({ingredients: updatedIngredients, totalPrice: updatedPrice})\r\n        this.updatePurchaseState(updatedIngredients);\r\n        \r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancleHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert(\"Continue!\")\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: 'Sarina Sajadi',\r\n                address: {\r\n                    street:  'Test street',\r\n                    zipCode: '12345',\r\n                    country: 'Canada'\r\n                },\r\n                email: 'test@test.com'\r\n        },\r\n        deliveryMethod: 'fastest'\r\n    }\r\n    axios.post('/orders', order).then(response => {this.setState({loading: false, purchasing: false})}).catch(error => {this.setState({loading: false, purchasing: false})})\r\n}\r\n\r\n    render(){\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.state.error ? <p>Ingrdints can not be loaded!</p> : <Spinner />\r\n\r\n        if(this.state.ingredients){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients}/>\r\n                    <BuildControls addIngredients={this.addIngredientHandler}\r\n                               removeIngredients={this.removeIngredientHandler}\r\n                               disabled={disabledInfo}\r\n                               price={this.state.totalPrice}\r\n                               purchasable={this.state.purchasable}\r\n                               ordered={this.purchasingHandler}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary ingredients={this.state.ingredients} \r\n                cancelOrder={this.purchaseCancleHandler}\r\n                continueOrder={this.purchaseContinueHandler}\r\n                price={this.state.totalPrice.toFixed(2)}/>\r\n        }\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancleHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}